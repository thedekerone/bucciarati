{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\n// lib/withApollo.js\nimport withApollo from 'next-with-apollo';\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\nimport { createHttpLink } from 'apollo-link-http';\n\nconst customFetch = (uri, options) => {\n  const {\n    body\n  } = options,\n        newOptions = _objectWithoutProperties(options, [\"body\"]);\n\n  const queryString = objectToQuery(JSON.parse(body));\n  requestedString = uri + queryString;\n  return fetch(requestedString, newOptions);\n};\n\nconst link = createHttpLink({\n  uri: 'https://chupetinps.herokuapp.com',\n  useGETForQueries: true\n});\nexport default withApollo(({\n  ctx,\n  headers,\n  initialState\n}) => new ApolloClient({\n  request: operation => {\n    const user = localStorage.usuario;\n    const pass = localStorage.password;\n    operation.setContext({\n      headers: {\n        usuario: user ? user : null,\n        password: pass ? pass : null\n      }\n    });\n  },\n  link,\n  // https://chupetinps.herokuapp.com\n  cache: new InMemoryCache().restore(initialState || {})\n}), {\n  getDataFromTree: 'never'\n});","map":{"version":3,"sources":["C:\\Users\\Estacion\\Desktop\\Proyectos\\bucciarati-store\\lib\\withApollo.js"],"names":["withApollo","ApolloClient","InMemoryCache","createHttpLink","customFetch","uri","options","body","newOptions","queryString","objectToQuery","JSON","parse","requestedString","fetch","link","useGETForQueries","ctx","headers","initialState","request","operation","user","localStorage","usuario","pass","password","setContext","cache","restore","getDataFromTree"],"mappings":";AAAA;AACA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,IAAuBC,aAAvB,QAA4C,cAA5C;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AACA,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAA0BD,OAAhC;AAAA,QAAiBE,UAAjB,4BAAgCF,OAAhC;;AACA,QAAMG,WAAW,GAAGC,aAAa,CAACC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAD,CAAjC;AACAM,EAAAA,eAAe,GAAGR,GAAG,GAAGI,WAAxB;AACA,SAAOK,KAAK,CAACD,eAAD,EAAkBL,UAAlB,CAAZ;AACA,CALD;;AAMA,MAAMO,IAAI,GAAGZ,cAAc,CAAC;AAC3BE,EAAAA,GAAG,EAAgB,kCADQ;AAE3BW,EAAAA,gBAAgB,EAAG;AAFQ,CAAD,CAA3B;AAIA,eAAehB,UAAU,CACxB,CAAC;AAAEiB,EAAAA,GAAF;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KACC,IAAIlB,YAAJ,CAAiB;AAChBmB,EAAAA,OAAO,EAAIC,SAAD,IAAe;AACxB,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAA1B;AACA,UAAMC,IAAI,GAAGF,YAAY,CAACG,QAA1B;AAEAL,IAAAA,SAAS,CAACM,UAAV,CAAqB;AACpBT,MAAAA,OAAO,EAAG;AACTM,QAAAA,OAAO,EAAIF,IAAI,GAAGA,IAAH,GAAU,IADhB;AAETI,QAAAA,QAAQ,EAAGD,IAAI,GAAGA,IAAH,GAAU;AAFhB;AADU,KAArB;AAMA,GAXe;AAYhBV,EAAAA,IAZgB;AAahB;AAEAa,EAAAA,KAAK,EAAK,IAAI1B,aAAJ,GAAoB2B,OAApB,CAA4BV,YAAY,IAAI,EAA5C;AAfM,CAAjB,CAFuB,EAmBxB;AACCW,EAAAA,eAAe,EAAG;AADnB,CAnBwB,CAAzB","sourcesContent":["// lib/withApollo.js\r\nimport withApollo from 'next-with-apollo';\r\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nconst customFetch = (uri, options) => {\r\n\tconst { body, ...newOptions } = options;\r\n\tconst queryString = objectToQuery(JSON.parse(body));\r\n\trequestedString = uri + queryString;\r\n\treturn fetch(requestedString, newOptions);\r\n};\r\nconst link = createHttpLink({\r\n\turi              : 'https://chupetinps.herokuapp.com',\r\n\tuseGETForQueries : true\r\n});\r\nexport default withApollo(\r\n\t({ ctx, headers, initialState }) =>\r\n\t\tnew ApolloClient({\r\n\t\t\trequest : (operation) => {\r\n\t\t\t\tconst user = localStorage.usuario;\r\n\t\t\t\tconst pass = localStorage.password;\r\n\r\n\t\t\t\toperation.setContext({\r\n\t\t\t\t\theaders : {\r\n\t\t\t\t\t\tusuario  : user ? user : null,\r\n\t\t\t\t\t\tpassword : pass ? pass : null\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tlink,\r\n\t\t\t// https://chupetinps.herokuapp.com\r\n\r\n\t\t\tcache   : new InMemoryCache().restore(initialState || {})\r\n\t\t}),\r\n\t{\r\n\t\tgetDataFromTree : 'never'\r\n\t}\r\n);\r\n"]},"metadata":{},"sourceType":"module"}