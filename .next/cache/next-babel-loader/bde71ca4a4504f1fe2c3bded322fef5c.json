{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\n\nvar IsOffline =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IsOffline, _Component);\n\n  function IsOffline(props) {\n    var _this;\n\n    _classCallCheck(this, IsOffline);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IsOffline).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"goOnline\", function () {\n      return _this.setState({\n        onLine: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"goOffline\", function () {\n      return _this.setState({\n        onLine: false\n      });\n    });\n\n    _this.state = {\n      onLine: true\n    };\n    return _this;\n  }\n\n  _createClass(IsOffline, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!window) return;\n      this.setState({\n        onLine: navigator ? navigator.onLine : true\n      });\n      window.addEventListener('online', this.goOnline);\n      window.addEventListener('offline', this.goOffline);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('online', this.goOnline);\n      window.removeEventListener('offline', this.goOffline);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var onLine = this.state.onLine;\n\n      if (onLine) {\n        return null;\n      }\n\n      return __jsx(\"span\", null, children);\n    }\n  }]);\n\n  return IsOffline;\n}(Component);\n\nexport { IsOffline as default };","map":null,"metadata":{},"sourceType":"module"}