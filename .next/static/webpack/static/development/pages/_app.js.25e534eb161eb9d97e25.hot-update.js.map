{"version":3,"file":"static/webpack/static/development/pages/_app.js.25e534eb161eb9d97e25.hot-update.js","sources":["webpack:///./lib/withApollo.js"],"sourcesContent":["// lib/withApollo.js\nimport withApollo from \"next-with-apollo\";\n// import ApolloClient, { InMemoryCache } from 'apollo-boost';\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nconst link = createHttpLink({\n  uri: \"http://localhost:4000\",\n  useGETForQueries: true\n});\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const user = localStorage.usuario;\n  const pass = localStorage.password;\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      usuario: user ? user : null,\n      password: pass ? pass : null\n    }\n  };\n});\nexport default withApollo(\n  ({ ctx, headers, initialState }) =>\n    new ApolloClient({\n      link: authLink.concat(link),\n      // link,\n      // fetchOptions : {\n      // \tuseGETForQueries : true\n      // },\n      // uri          : 'https://chupetinps.herokuapp.com',\n      // // https://chupetinps.herokuapp.com\n      cache: new InMemoryCache().restore(initialState || {})\n    }),\n  {\n    getDataFromTree: \"never\"\n  }\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AADA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAYA;AADA;;;;A","sourceRoot":""}