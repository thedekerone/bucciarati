{"version":3,"file":"static/webpack/static/development/pages/single.js.b8d731342da3f42d3d50.hot-update.js","sources":["webpack:///./component/views/RegisterPortal.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Query, graphql } from \"react-apollo\";\nimport { Router } from \"../../routes\";\n\nimport gql from \"graphql-tag\";\nconst GET_USER = gql`\n  {\n    getUsers {\n      _id\n      username\n      password\n    }\n  }\n`;\nlet message = \"wrong username or password\";\nconst RegisterPortal = ({ show, client, setShow }) => {\n  const [count, setCount] = useState(0);\n\n  let username, password, email;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await handleLogin();\n    await client\n      .query({\n        query: GET_USER\n      })\n      .then(result => {\n        if (result.data.getUsers) {\n          setShow(false);\n          setCount(0);\n        } else {\n          setCount(3);\n        }\n\n        return null;\n      });\n  };\n  return (\n    <div>\n      <div className=\"portal\">\n        <div className=\"login-container\">\n          <div\n            onClick={() => {\n              setShow(false);\n            }}\n            className=\"exit\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 26 26\"\n              width=\"18\"\n              height=\"18\"\n              fill=\"#000000\"\n            >\n              <path d=\"M 3 0 L 3 5 C 3.003906 5.527344 3.21875 6.035156 3.59375 6.40625 L 10.1875 13 L 3.59375 19.59375 C 3.21875 19.964844 3.003906 20.472656 3 21 L 3 26 L 7 26 L 7 21.8125 L 13 15.8125 L 19 21.8125 L 19 26 L 23 26 L 23 21 C 22.996094 20.472656 22.78125 19.964844 22.40625 19.59375 L 15.8125 13 L 22.40625 6.40625 C 22.78125 6.035156 22.996094 5.527344 23 5 L 23 0 L 19 0 L 19 4.1875 L 13 10.1875 L 7 4.1875 L 7 0 Z\" />\n            </svg>\n          </div>\n\n          <h1>Register</h1>\n          <form\n            action=\"POST\"\n            onSubmit={e => {\n              handleSubmit(e);\n            }}\n          >\n            <div className=\"login-form\">\n              <div className=\"username\">\n                <label htmlFor=\"username\">username:</label>\n                <input\n                  type=\"text\"\n                  ref={input => {\n                    username = input;\n                  }}\n                  placeholder=\"username\"\n                />\n              </div>\n              <div className=\"password\">\n                <label htmlFor=\"password\">password:</label>\n                <input\n                  type=\"password\"\n                  ref={input => {\n                    password = input;\n                  }}\n                  placeholder=\"password\"\n                />\n              </div>\n              <div className=\"email\">\n                <label htmlFor=\"username\">Correo:</label>\n                <input\n                  type=\"text\"\n                  ref={input => {\n                    email = input;\n                  }}\n                  placeholder=\"email@mail.com\"\n                />\n              </div>\n            </div>\n\n            <input className=\"btn\" type=\"submit\" />\n          </form>\n\n          <p className=\"message\">{message}</p>\n        </div>\n      </div>\n\n      <style jsx>\n        {`\n          h1 {\n            color: black;\n            font-size: 1.5em;\n            text-transform: uppercase;\n          }\n          .exit {\n            position: absolute;\n            right: 5px;\n            top: 5px;\n            font-size: 1.5rem;\n          }\n          input {\n            padding: 0.5em;\n            border: 0;\n            margin: 0.8em 0.4em;\n          }\n          .btn {\n            border-radius: 5px;\n            margin: 0 auto;\n            margin-top: 3em;\n            background: #db415d;\n            color: white;\n            text-transform: uppercase;\n            font-weight: bold;\n            flex-wrap: nowrap;\n            width: 100%;\n          }\n          .message {\n            color: red;\n            font-size: 0.6rem;\n            display: ${count < 1 ? \"none\" : \"inline\"};\n          }\n          .email {\n            margin: 0 auto;\n          }\n          .portal {\n            height: 100vh;\n\n            left: 0;\n            top: 0;\n            width: 100vw;\n            position: fixed;\n            z-index: 100000000;\n            background: rgba(0, 0, 0, 0.4);\n            display: ${show ? \"block\" : \"none\"};\n          }\n          .login-form {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            flex-direction: column;\n          }\n          .login-container {\n            background: white;\n            margin: 10% auto;\n            padding: 30px;\n            position: relative;\n            max-width: 400px;\n          }\n          .exit svg:hover {\n            cursor: pointer;\n            fill: red;\n          }\n          @media (min-width: 660px) {\n            .login-form {\n              flex-direction: row;\n            }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default RegisterPortal;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAKA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/DA;AAAA;AAAA;AAAA;AA6IA;AACA;AACA;;;;A","sourceRoot":""}